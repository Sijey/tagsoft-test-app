{"version":3,"sources":["actions/characters.js","consts.js","reducers/characters.js","components/sales/Sales.js","components/characters/Info.js","components/characters/Characters.js","App.js","index.js"],"names":["CHAR_ACTIONS","populate","characters","info","type","payload","loadPage","e","pageInfo","dispatch","page","activePage","loadCharacters","setLoadingError","error","getState","a","async","state","getPage","success","fetch","response","status","json","results","initialState","loadingError","Sales","useState","percent","setPercent","Card","className","Content","Header","Meta","Description","Progress","progress","Button","onClick","min","max","Math","ceil","random","generateProgress","Info","char","Modal","trigger","name","centered","image","Image","wrapped","size","src","species","gender","origin","connect","sortedChar","load","sortCharacters","sorted","handleSort","useEffect","Message","negative","Divider","Table","collapsing","celled","inverted","sortable","Row","HeaderCell","width","textAlign","Body","map","key","id","Cell","selectable","Pagination","totalPages","pages","onPageChange","Loader","active","inline","store","createStore","action","sort","b","localeCompare","applyMiddleware","thunk","App","Menu","Item","as","NavLink","to","exact","path","component","Characters","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.741ac7ca.chunk.js","sourcesContent":["import { API } from '../consts';\n\nexport const CHAR_ACTIONS = {\n\tPOPULATE: 'CHAR_POPULATE',\n\tPAGE_INFO: 'PAGE_INFO',\n\tSET_LOADING_ERROR: 'CHAR_SET_LOADING_ERROR',\n\tHANDLE_SORT: 'HANDLE_SORT',\n\tCHANGE_PAGE: 'CHANGE_PAGE'\n};\n\nconst populate = (characters, info) => ({\n\ttype: CHAR_ACTIONS.POPULATE,\n\tpayload: {\n\t\tcharacters,\n\t\tinfo\n\t},\n});\n\nexport const handleSort = sorted => ({\n\ttype: CHAR_ACTIONS.HANDLE_SORT,\n\tpayload: sorted\n});\n\nexport const changePage = page => ({\n\ttype: CHAR_ACTIONS.CHANGE_PAGE,\n\tpayload: page,\n});\n\nexport const loadPage = (e, pageInfo) => {\n\treturn dispatch => {\n\t\tdispatch(changePage(pageInfo.activePage));\n\t\tdispatch(loadCharacters())\n\t}\n};\n\nconst setLoadingError = error => ({\n\ttype: CHAR_ACTIONS.SET_LOADING_ERROR,\n\tpayload: error\n});\n\nexport const loadCharacters = () => {\n\treturn async (dispatch, getState) => {\n\t\tconst state = getState();\n\t\tconst getPage = state => state.activePage;\n\t\tconst page = getPage(state);\n\t\tdispatch(setLoadingError(null));\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await fetch(`${API + page}`);\n\t\t\tif (response.status === 200) {\n\t\t\t\tconst characters = await response.json();\n\t\t\t\tdispatch(populate(characters.results, characters.info));\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t} finally {\n\t\t\tif (!success) {\n\t\t\t\tdispatch(setLoadingError('Loading failed'));\n\t\t\t}\n\t\t}\n\t}\n};\n","export const API = 'https://rickandmortyapi.com/api/character/?page=';\n","import {CHAR_ACTIONS} from '../actions/characters';\n\nconst initialState = {\n\tcharacters: null,\n\tpageInfo: null,\n\tloadingError: null,\n\tactivePage: 1\n};\n\nexport const reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase CHAR_ACTIONS.POPULATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcharacters: action.payload.characters,\n\t\t\t\tpageInfo: action.payload.info\n\t\t\t};\n\t\tcase CHAR_ACTIONS.SET_LOADING_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloadingError: action.payload\n\t\t\t};\n\t\tcase CHAR_ACTIONS.HANDLE_SORT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcharacters: [...state.characters].sort((a, b) => a.name.localeCompare(b.name))\n\t\t\t};\n\t\tcase CHAR_ACTIONS.CHANGE_PAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactivePage: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React, { useState } from 'react';\nimport { Button, Card, Progress } from 'semantic-ui-react';\nimport './sales.css';\n\nconst Sales = () => {\n\n  const [percent, setPercent] = useState(0);\n\n  const generateProgress = (min = 10, max = 99) => {\n    return percent >= 100 ? 0 : Math.ceil(Math.random() * (max - min)) + min;\n};\n\n  return (\n    <Card className='sales'>\n      <Card.Content>\n        <Card.Header>Обучениие по продажам</Card.Header>\n        <Card.Meta>Вы сделали 13 продаж и заработали:</Card.Meta>\n        <Card.Description>$ 2 000</Card.Description>\n        <Card>\n          <Card.Content>\n            <Card.Header>Месячный план выполнен на</Card.Header>\n            <Progress percent={percent} progress />\n            <div className='sales-div'>\n\t\t\t\t\t\t\t<Button className='sales-button' onClick={() => setPercent(generateProgress())}>Продолжить</Button>\n\t\t\t\t\t\t\t<Card.Meta>Осталось 8 дней</Card.Meta>\n\t\t\t\t\t\t</div>\n          </Card.Content>\n        </Card>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default Sales;\n","import React from 'react';\nimport { Header, Image, Modal } from 'semantic-ui-react';\n\nconst Info = ({ char }) => {\n\n\treturn (\n\t\t<Modal trigger={<p>{char.name}</p>} centered={false}>\n\t\t\t<Modal.Content image>\n\t\t\t\t<Image wrapped size='medium' src={char.image} />\n\t\t\t\t<Modal.Description>\n\t\t\t\t\t<Header>{char.name}</Header>\n\t\t\t\t\t<p>Status: {char.status}</p>\n\t\t\t\t\t<p>Species: {char.species}</p>\n\t\t\t\t\t<p>Gender: {char.gender}</p>\n\t\t\t\t\t<p>Origin: {char.origin.name}</p>\n\t\t\t\t</Modal.Description>\n\t\t\t</Modal.Content>\n\t\t</Modal>\n\t);\n};\n\nexport default Info;\n","import React, { useEffect } from 'react';\nimport { Button, Divider, Loader, Message, Table, Pagination } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { handleSort, loadCharacters, loadPage } from '../../actions/characters';\nimport Info from \"./Info\";\n\nconst Characters = ({ characters, load, error, loadPage, activePage, sortCharacters, pageInfo }) => {\n\tuseEffect(() => {\n\t\tload();\n\t}, [load]);\n\n\tif (error) {\n\t\treturn (\n\t\t\t<Message negative>\n\t\t\t\t<Message.Header>{error}</Message.Header>\n\t\t\t\t<Divider />\n\t\t\t\t<Button onClick={load}>Try again</Button>\n\t\t\t</Message>\n\t\t);\n\t} else if (characters){\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Table collapsing celled inverted sortable>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell width={1} textAlign='center'>Id</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' onClick={sortCharacters}>Name</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{characters.map(char => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Table.Row key={char.id}>\n\t\t\t\t\t\t\t\t\t<Table.Cell textAlign='center'>{char.id}</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell textAlign='center' selectable>\n\t\t\t\t\t\t\t\t\t\t<Info char={char} />\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t\t<Pagination activePage={activePage} totalPages={pageInfo.pages} onPageChange={loadPage} />\n\t\t\t</>\n\t\t)\n\t} else {\n\t\treturn <Loader active inline='centered' />\n\t}\n};\n\nexport default connect(state => ({\n\tcharacters: state.characters,\n\tpageInfo: state.pageInfo,\n\terror: state.loadingError,\n\tactivePage: state.activePage,\n\tsortedChar: state.sortedChar\n}), dispatch => ({\n\tload: () => dispatch(loadCharacters()),\n\tloadPage: (e, pageInfo) => dispatch(loadPage(e, pageInfo)),\n\tsortCharacters: sorted => dispatch(handleSort(sorted))\n}))(Characters);\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { reducer } from './reducers/characters';\nimport Sales from \"./components/sales/Sales\";\nimport thunk from \"redux-thunk\";\nimport Characters from \"./components/characters/Characters\";\nimport { Menu } from 'semantic-ui-react';\nimport { NavLink } from 'react-browser-router';\nimport { Route, Switch } from 'react-router';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Menu inverted className='menu-bar'>\n        <Menu.Item as={NavLink} to='/' exact>Characters</Menu.Item>\n        <Menu.Item as={NavLink} to='/sales' exact>Sales</Menu.Item>\n      </Menu>\n      <Switch>\n        <Route path='/' exact component={Characters} />\n        <Route path='/sales' exact component={Sales} />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}